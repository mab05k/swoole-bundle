version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
aliases:
  # Steps
  - &prepare-swoole-version-env
    run:
      name: Export latest swoole version env if SWOOLE_VERSION=latest
      command: |-
        if [ "latest" = "$SWOOLE_VERSION" ]; then
          LATEST_SWOOLE_VERSION="$(wget -q -O /dev/stdout https://api.github.com/repos/swoole/swoole-src/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')"
          echo "LATEST_SWOOLE_VERSION=$LATEST_SWOOLE_VERSION"
          echo "export SWOOLE_VERSION='$LATEST_SWOOLE_VERSION'" >> $BASH_ENV
        fi;

  - &docker-compose-build-basic
    run:
      name: Docker-Compose Build
      command: docker-compose build --pull composer

  - &docker-compose-build-all
    run:
      name: Docker-Compose Build
      command: docker-compose build --pull

  - &docker-compose-build-releaser
    run:
      name: Docker-Compose Build
      command: docker-compose build --pull releaser

  - &code-style-analysis
    run:
      name: Code style analysis
      command: docker-compose run --rm composer cs-analyse

  - &static-src-analysis
    run:
      name: Sources static analysis
      command: docker-compose run --rm composer static-analyse-src

  - &static-tests-analysis
    run:
      name: Test sources static analysis
      command: docker-compose run --rm composer static-analyse-tests

  - &prepare-cov-permissions
    run:
      name: Prepare files and dirs permissions for code coverage containers
      command: |-
        mkdir -p cov
        touch clover.xml
        chown 1000:1000 cov clover.xml

  - &run-unit-tests
    run:
      name: Run unit tests
      command: docker-compose run --rm composer unit-tests

  - &run-unit-tests-with-coverage
    run:
      name: Run unit tests with coverage (pcov)
      command: docker-compose run --rm coverage-pcov

  - &run-feature-tests
    run:
      name: Run feature tests
      command: docker-compose run --rm composer feature-tests

  - &run-feature-tests-with-coverage-xdebug
    run:
      name: Run feature tests with coverage (xdebug) and retry
      command: docker-compose run --rm coverage-xdebug-feature-with-retry

  - &run-feature-tests-with-coverage-pcov
    run:
      name: Run feature tests with coverage (pcov)
      command: docker-compose run --rm coverage-pcov feature-code-coverage

  - &run-releaser
    run:
      name: Release version
      command: |-
        pwd
        git --version
        git status
        ls -lah
        ls -lah .git
        whoami
        docker-compose run --entrypoint sh --rm releaser -c 'pwd && ls -lah && git --version && whoami && ls -lah .git && git status'
        docker-compose run --rm releaser

  - &prepare-codeclimate-reporter
    run:
      name: Prepare CodeClimate Code Coverage reporter
      command: |-
        wget -O cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build

  - &upload-codeclimate-report
    run:
      name: Send Code Coverage report to CodeClimate
      command: ./cc-test-reporter after-build -t clover --exit-code 0 --prefix /usr/src/app

  - &upload-codecov-report
    codecov/upload:
      file: clover.xml

  - &merge-code-coverage
    run:
      name: Merge code coverage files generated across test suites
      command: docker-compose run --rm merge-code-coverage

  # Build environment details
  - &docker-env-vars
    DOCKER_BUILDKIT: "1"
    COMPOSE_DOCKER_CLI_BUILD: "1"

  - &docker-env
    docker:
      # - image: k911/docker-client:compose
      - image: registry.gitlab.com/swoole-bundle/docker-client:feat-add-git-and-more-usable-tools-dae7b285-compose
    working_directory: ~/workdir

  # Steps
  - &docker-default
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - *prepare-swoole-version-env
      - *docker-compose-build-basic
      - *code-style-analysis
      - *static-src-analysis
      - *static-tests-analysis
      - *run-unit-tests

  - &docker-coverage
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - *prepare-swoole-version-env
      - *prepare-codeclimate-reporter
      - *prepare-cov-permissions
      - *docker-compose-build-all
      - *code-style-analysis
      - *static-src-analysis
      - *static-tests-analysis
      - *run-unit-tests-with-coverage
      - *run-feature-tests-with-coverage-pcov
      - *run-feature-tests-with-coverage-xdebug
      - *merge-code-coverage
      - *upload-codecov-report

  - &docker-release
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - *docker-compose-build-releaser
      - *run-releaser

  # Filters
  - &pull-request-checks-job-filters
    filters:
      branches:
        ignore:
          - master

  - &release-job-filters
    filters:
      tags:
        ignore: /.*/
      branches:
        only:
          - master

  - &post-release-job-filters
    filters:
      tags:
        only: /^v.*/
      branches:
        ignore: /.*/

jobs:
  swoole-bundle-composer-73:
    docker:
      - image: docker.io/k911/swoole-bundle-composer:7.3-$CIRCLE_SHA1
    working_directory: /usr/src/app
    steps:
      - run:
          name: Run basic tests
          command: composer test

  swoole-bundle-composer-74:
    docker:
      - image: docker.io/k911/swoole-bundle-composer:7.4-$CIRCLE_SHA1
    working_directory: /usr/src/app
    steps:
      - run:
          name: Run basic tests
          command: composer test

  swoole-bundle-releaser:
    docker:
      - image: docker.io/k911/swoole-bundle-releaser:7.4-$CIRCLE_SHA1
    working_directory: /usr/src/app
    environment:
      DRY_RUN: "1"
      GH_TOKEN: "xxx"
    steps:
      - checkout
      - run:
          name: Dry run release-version script
          command: release-version

  docker-buildx-bake-74:
    docker:
      - image: k911/docker-client:compose
    working_directory: ~/workdir
    environment:
      PHP_VERSION: 7.4
      PHP_API_VERSION: "20190902"
      DOCKER_BUILDKIT: "1"
      REGISTRY: docker.io
      NAMESPACE: k911
      IMAGE: swoole-bundle
      SERVICES: releaser cli composer
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Print env
          command: env
      - run:
          name: Print docker info
          command: docker info
      - run:
          name: Login to github packages docker registry
          command: >-
            DOCKER_REGISTRY="docker.io"
            DOCKER_USERNAME="$DOCKER_HUB_USERNAME"
            DOCKER_PASSWORD="$DOCKER_HUB_TOKEN"
            docker-registry-login
      - run:
          name: Enable docker buidx
          environment:
            DOCKER_BUILDX_CONTEXT_CREATE: "1"
            DOCKER_BUILDX_BUILDER_CREATE: "1"
          command: docker-use-buildx
      - run:
          name: Docker Buildx Bake all required images
          command: >-
            TAG="$PHP_VERSION-$CIRCLE_SHA1"
            docker buildx bake --progress=plain $SERVICES

  docker-buildx-bake-73:
    docker:
      - image: k911/docker-client:compose
    working_directory: ~/workdir
    environment:
      PHP_VERSION: 7.3
      PHP_API_VERSION: "20180731"
      DOCKER_BUILDKIT: "1"
      REGISTRY: docker.io
      NAMESPACE: k911
      IMAGE: swoole-bundle
      SERVICES: cli composer
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Print env
          command: env
      - run:
          name: Print docker info
          command: docker info
      - run:
          name: Login to github packages docker registry
          command: >-
            DOCKER_REGISTRY="docker.io"
            DOCKER_USERNAME="$DOCKER_HUB_USERNAME"
            DOCKER_PASSWORD="$DOCKER_HUB_TOKEN"
            docker-registry-login
      - run:
          name: Enable docker buidx
          environment:
            DOCKER_BUILDX_CONTEXT_CREATE: "1"
            DOCKER_BUILDX_BUILDER_CREATE: "1"
          command: docker-use-buildx
      - run:
          name: Docker Buildx Bake all required images
          command: >-
            TAG="$PHP_VERSION-$CIRCLE_SHA1"
            docker buildx bake --progress=plain $SERVICES

  php-73-cc:
    <<: *docker-env
    <<: *docker-coverage
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.3
      PHP_API_VERSION: "20180731"
      CC_TEST_REPORTER_ID: 77af0c58a2646fe49fb7df502c38a56560e074fbc8b3086f2d33032b44c885a8

  php-73:
    <<: *docker-env
    <<: *docker-default
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.3
      PHP_API_VERSION: "20180731"

  php-73-lowest:
    <<: *docker-env
    <<: *docker-default
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.3
      PHP_API_VERSION: "20180731"
      COMPOSER_ARGS: update --prefer-lowest

  php-74:
    <<: *docker-env
    <<: *docker-default
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.4
      PHP_API_VERSION: "20190902"

  php-74-latest:
    <<: *docker-env
    <<: *docker-default
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.4
      PHP_API_VERSION: "20190902"
      COMPOSER_ARGS: update --ignore-platform-reqs
      SWOOLE_VERSION: latest

  check-composer-config:
    docker:
      - image: composer:1
    steps:
      - checkout
      - run:
          name: Validate composer configuration
          command: composer validate

  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:stable
    steps:
      - checkout
      - run:
          name: Shellcheck ".circleci" directory
          command: shellcheck .circleci/*.sh
      - run:
          name: Shellcheck "tests" directory
          command: shellcheck tests/*.sh

  validate-commit-message:
    docker:
      - image: node:lts-alpine
    steps:
      - checkout
      - run:
          name: Install git
          command: apk add --no-cache git
      - run:
          name: Install commitlint
          command: |-
            npm config set unsafe-perm true
            npm i -g @commitlint/cli @commitlint/config-conventional
      - run:
          name: Validate commit message format
          command: commitlint --from=HEAD~20 -V

  release-version:
    <<: *docker-env
    <<: *docker-release
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.3
      PHP_API_VERSION: "20180731"
      DRY_RUN: "0"

  release-version-dry-run:
    <<: *docker-env
    <<: *docker-release
    environment:
      <<: *docker-env-vars
      PHP_VERSION: 7.3
      PHP_API_VERSION: "20180731"
      DRY_RUN: "1"
      GH_TOKEN: "xxxx"

workflows:
  version: 2.1
  pull-request-checks:
    jobs:
      - swoole-bundle-composer-73:
          <<: *pull-request-checks-job-filters
          requires:
            - check-composer-config
            - docker-buildx-bake-73
      - swoole-bundle-composer-74:
          <<: *pull-request-checks-job-filters
          requires:
            - check-composer-config
            - docker-buildx-bake-74
      - swoole-bundle-releaser:
          <<: *pull-request-checks-job-filters
          requires:
            - shellcheck
            - docker-buildx-bake-74
            - check-composer-config
            - validate-commit-message
      - docker-buildx-bake-73:
          <<: *pull-request-checks-job-filters
          requires:
            - docker-buildx-bake-74
      - docker-buildx-bake-74:
          <<: *pull-request-checks-job-filters
      - shellcheck:
          <<: *pull-request-checks-job-filters
      - check-composer-config:
          <<: *pull-request-checks-job-filters
      # - release-version-dry-run:
      #     <<: *pull-request-checks-job-filters
      #     requires:
      #       - shellcheck
      - validate-commit-message:
          <<: *pull-request-checks-job-filters
      - php-73:
          <<: *pull-request-checks-job-filters
          requires:
            - swoole-bundle-composer-73
            - swoole-bundle-composer-74
      - php-73-cc:
          <<: *pull-request-checks-job-filters
          requires:
            - swoole-bundle-composer-73
            - swoole-bundle-composer-74
      - php-74-latest:
          <<: *pull-request-checks-job-filters
          requires:
            - swoole-bundle-composer-73
            - swoole-bundle-composer-74
      - php-73-lowest:
          <<: *pull-request-checks-job-filters
          requires:
            - swoole-bundle-composer-73
            - swoole-bundle-composer-74
      - php-74:
          <<: *pull-request-checks-job-filters
          requires:
            - swoole-bundle-composer-73
            - swoole-bundle-composer-74
  release:
    jobs:
      - shellcheck:
          <<: *release-job-filters
      - check-composer-config:
          <<: *release-job-filters
      - validate-commit-message:
          <<: *release-job-filters
      - php-73:
          <<: *release-job-filters
          requires:
            - check-composer-config
      - php-73-cc:
          <<: *release-job-filters
          requires:
            - check-composer-config
      - php-74-latest:
          <<: *release-job-filters
          requires:
            - check-composer-config
      - php-73-lowest:
          <<: *release-job-filters
          requires:
            - check-composer-config
      - release-version:
          <<: *release-job-filters
          requires:
            - php-73
            - php-73-cc
            - php-74-latest
            - php-73-lowest
            - shellcheck
            - validate-commit-message
